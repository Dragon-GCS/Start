{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Start","text":"<p>A python package manager based on pip and venv, use <code>pyproject.toml</code> instead of <code>requirements.txt</code></p>"},{"location":"#install","title":"install","text":"<p>Install from pypi</p> <pre><code>&gt;&gt;&gt; pip install start-manager\n</code></pre> <p>Install from source</p> <pre><code>&gt;&gt;&gt; git clone https://github.com/Dragon-GCS/Start\n&gt;&gt;&gt; cd Start\n&gt;&gt;&gt; pip install -e .\n</code></pre> <p><code>start</code> is a default alias in powershell, use <code>Remove-Item alias:start -Force</code> to remove alias before use <code>start</code></p> <p>Optional: Add <code>Remove-Item alias:start -Force</code> in powershell profile</p>"},{"location":"reference/","title":"<code>Start</code>","text":"<p>Package manager based on pip and venv</p> <p>Usage:</p> <pre><code>$ Start [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <ul> <li><code>--install-completion</code>: Install completion for the current shell.</li> <li><code>--show-completion</code>: Show completion for the current shell, to copy it or customize the installation.</li> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>add</code>: Install packages and add to the dependency...</li> <li><code>env</code>: Manager environments.</li> <li><code>init</code>: Use current directory as the project name...</li> <li><code>install</code>: Install packages in specified dependency...</li> <li><code>list</code>: Display all installed packages.</li> <li><code>new</code>: Create a new project and virtual...</li> <li><code>remove</code>: Uninstall packages and remove from the...</li> <li><code>show</code>: Show information about installed packages.</li> </ul>"},{"location":"reference/#start-add","title":"<code>Start add</code>","text":"<p>Install packages and add to the dependency file.</p> <p>Usage:</p> <pre><code>$ Start add [OPTIONS] PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>-D, --dev</code>: Add packages as development dependency</li> <li><code>-d, --dependency TEXT</code>: Dependency file name. If given a toml file, start will parse 'project.dependencies', else start will parse as requirements.txt. If toml file not exists, it will be created. If not given, start will find 'pyproject.toml' and 'requirements.txt'  [default: pyproject.toml]</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-env","title":"<code>Start env</code>","text":"<p>Manager environments.</p> <p>Usage:</p> <pre><code>$ Start env [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>activate</code>: Display the activate command for the...</li> <li><code>create</code>: Create a virtual environment and install...</li> <li><code>list</code>: List all virtual environments.</li> </ul>"},{"location":"reference/#start-env-activate","title":"<code>Start env activate</code>","text":"<p>Display the activate command for the virtual environment.</p> <p>Start will check following path to find the virtual environment:</p> <ul> <li> <p><code>$START_DATA_DIR/&lt;ENV_NAME&gt;</code></p> </li> <li> <p><code>$START_DATA_DIR/&lt;ENV_NAME&gt;/.venv</code></p> </li> <li> <p><code>$START_DATA_DIR/&lt;ENV_NAME&gt;/.env</code></p> </li> <li> <p><code>$START_DATA_DIR/&lt;ENV_NAME&gt;/venv</code></p> </li> <li> <p><code>$(pwd)/&lt;ENV_NAME&gt;</code></p> </li> <li> <p><code>$(pwd)/&lt;ENV_NAME&gt;/.venv</code></p> </li> <li> <p><code>$(pwd)/&lt;ENV_NAME&gt;/.env</code></p> </li> <li> <p><code>$(pwd)/&lt;ENV_NAME&gt;/venv</code></p> </li> </ul> <p>To activate on different shell, use following commands:</p> <ul> <li> <p>Powershell: Invoke-Expression (&amp;start env activate ) <li> <p>cmd: Not support due to the conflict of start</p> </li> <li> <p>bash/zsh: eval \"$(start env activate )\" <li> <p>fish: start env activate | source <li> <p>csh/tcsh: eval `start env activate ` <p>Usage:</p> <pre><code>$ Start env activate [OPTIONS] ENV_NAME\n</code></pre> <p>Arguments:</p> <ul> <li><code>ENV_NAME</code>: Name of the virtual environment  [required]</li> </ul> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-env-create","title":"<code>Start env create</code>","text":"<p>Create a virtual environment and install specified packages.</p> <p>Usage:</p> <pre><code>$ Start env create [OPTIONS] ENV_NAME PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>ENV_NAME</code>: Name of the virtual environment  [required]</li> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>-r, --require TEXT</code>: Dependency file name. Toml file or plain text file</li> <li><code>-f, --force</code>: Remove the existing virtual environment if it exists</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>--with-pip / --without-pip</code>: Install pip in the virtual environment  [default: with-pip]</li> <li><code>--without-upgrade</code>: Don't upgrade core package(pip &amp; setuptools) and all packages to be installed in the virtual environment</li> <li><code>--without-system-packages</code>: Don't give the virtual environment access to system packages</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-env-list","title":"<code>Start env list</code>","text":"<p>List all virtual environments.</p> <p>Usage:</p> <pre><code>$ Start env list [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-init","title":"<code>Start init</code>","text":"<p>Use current directory as the project name and create a new project at the current directory.</p> <p>Usage:</p> <pre><code>$ Start init [OPTIONS] PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>-r, --require TEXT</code>: Dependency file name. Toml file or plain text file</li> <li><code>-n, --vname TEXT</code>: Name of the virtual environment  [default: .venv]</li> <li><code>-f, --force</code>: Remove the existing virtual environment if it exists</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>-t, --template TEXT</code>: Template to use for the project</li> <li><code>--with-pip / --without-pip</code>: Install pip in the virtual environment  [default: with-pip]</li> <li><code>--without-upgrade</code>: Don't upgrade core package(pip &amp; setuptools) and all packages to be installed in the virtual environment</li> <li><code>--without-system-packages</code>: Don't give the virtual environment access to system packages</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-install","title":"<code>Start install</code>","text":"<p>Install packages in specified dependency file.</p> <p>Usage:</p> <pre><code>$ Start install [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>-r, --require TEXT</code>: Dependency file name. Toml file or plain text file</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-list","title":"<code>Start list</code>","text":"<p>Display all installed packages.</p> <p>Usage:</p> <pre><code>$ Start list [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>-t, --tree</code>: Display installed packages in a tree structure  [required]</li> <li><code>-D, --dev</code>: Add packages as development dependency</li> <li><code>-d, --dependency TEXT</code>: Dependency file name. If given a toml file, start will parse 'project.dependencies', else start will parse as requirements.txt. If toml file not exists, it will be created. If not given, start will find 'pyproject.toml' and 'requirements.txt'</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-new","title":"<code>Start new</code>","text":"<p>Create a new project and virtual environment, install the specified packages.</p> <p>Usage:</p> <pre><code>$ Start new [OPTIONS] PROJECT_NAME PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PROJECT_NAME</code>: Name of the project  [required]</li> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>-r, --require TEXT</code>: Dependency file name. Toml file or plain text file</li> <li><code>-n, --vname TEXT</code>: Name of the virtual environment  [default: .venv]</li> <li><code>-f, --force</code>: Remove the existing virtual environment if it exists</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>-t, --template TEXT</code>: Template to use for the project</li> <li><code>--with-pip / --without-pip</code>: Install pip in the virtual environment  [default: with-pip]</li> <li><code>--without-upgrade</code>: Don't upgrade core package(pip &amp; setuptools) and all packages to be installed in the virtual environment</li> <li><code>--without-system-packages</code>: Don't give the virtual environment access to system packages</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-remove","title":"<code>Start remove</code>","text":"<p>Uninstall packages and remove from the dependency file.</p> <p>Usage:</p> <pre><code>$ Start remove [OPTIONS] PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>-D, --dev</code>: Add packages as development dependency</li> <li><code>-d, --dependency TEXT</code>: Dependency file name. If given a toml file, start will parse 'project.dependencies', else start will parse as requirements.txt. If toml file not exists, it will be created. If not given, start will find 'pyproject.toml' and 'requirements.txt'  [default: pyproject.toml]</li> <li><code>-v, --verbose</code>: Display install details</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"reference/#start-show","title":"<code>Start show</code>","text":"<p>Show information about installed packages.</p> <p>Usage:</p> <pre><code>$ Start show [OPTIONS] PACKAGES...\n</code></pre> <p>Arguments:</p> <ul> <li><code>PACKAGES...</code>: Packages to install or display  [required]</li> </ul> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"}]}